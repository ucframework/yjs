export function testInconsistentFormat(): void;
export function testInfiniteCaptureTimeout(tc: t.TestCase): void;
export function testUndoText(tc: t.TestCase): void;
export function testEmptyTypeScope(_tc: t.TestCase): void;
export function testDoubleUndo(_tc: t.TestCase): void;
export function testUndoMap(tc: t.TestCase): void;
export function testUndoArray(tc: t.TestCase): void;
export function testUndoXml(tc: t.TestCase): void;
export function testUndoEvents(tc: t.TestCase): void;
export function testTrackClass(tc: t.TestCase): void;
export function testTypeScope(tc: t.TestCase): void;
export function testUndoInEmbed(tc: t.TestCase): void;
export function testUndoDeleteFilter(tc: t.TestCase): void;
export function testUndoUntilChangePerformed(_tc: t.TestCase): void;
export function testUndoNestedUndoIssue(_tc: t.TestCase): void;
export function testConsecutiveRedoBug(_tc: t.TestCase): void;
export function testUndoXmlBug(_tc: t.TestCase): void;
export function testUndoBlockBug(_tc: t.TestCase): void;
export function testUndoDeleteTextFormat(_tc: t.TestCase): void;
export function testBehaviorOfIgnoreremotemapchangesProperty(_tc: t.TestCase): void;
export function testSpecialDeletionCase(_tc: t.TestCase): void;
export function testUndoDeleteInMap(tc: t.TestCase): void;
export function testUndoDoingStackItem(_tc: t.TestCase): Promise<void>;
import * as t from "lib0/testing";
//# sourceMappingURL=undo-redo.tests.d.ts.map